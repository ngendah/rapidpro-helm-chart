---
- name: Install base packages
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - gnupg-agent
    - software-properties-common

- name: Add mappings to /etc/hosts
  ansible.builtin.blockinfile:
    path: /etc/hosts
    block: |
      {{ ansible_ssh_host }} {{ ansible_hostname }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ ansible_hostname }}"

- name: Get package architecture
  register: dpkg_architecture
  command: dpkg --print-architecture

- name: Add an apt signing key for Docker
  ansible.builtin.apt_key:
    id: 8D81803C0EBFCD88
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.gpg

- name: Add apt repository for Docker stable version
  block:
    - name: docker apt source
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ dpkg_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

- name: Install Nginx
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - nginx
    - apache2-utils

- name: Generate TLS certificate
  block:
  - name: Generate TLS private key
    community.crypto.openssl_privatekey:
      path: /etc/nginx/conf.d/ca.key
      size: 2048
  - name: Create CSR information
    community.crypto.openssl_csr_pipe:
      privatekey_path: /etc/nginx/conf.d/ca.key
      subject_alt_name:
      - "IP:{{ ansible_ssh_host }}"
    register: csr
  - name: Generate self signed TLS certificate
    community.crypto.x509_certificate:
      path: /etc/nginx/conf.d/ca.crt
      privatekey_path: /etc/nginx/conf.d/ca.key
      csr_content: "{{ csr.csr }}"
      provider: selfsigned
  - name: Download TLS CA certificate - For Docker installation
    ansible.builtin.fetch:
      src: /etc/nginx/conf.d/ca.crt
      dest: "{{ registry_ca_dir }}/docker/certs.d/{{ ansible_ssh_host }}/"
      flat: yes
  - name: Download TLS CA certificate - For Containerd installation
    ansible.builtin.fetch:
      src: /etc/nginx/conf.d/ca.crt
      dest: "{{ registry_ca_dir }}/containerd/ca.crt"
      flat: yes

- name: Generate htpasswd file
  ansible.builtin.shell:
    chdir: /etc/nginx/conf.d
    cmd: |
      htpasswd -cBb nginx.htpasswd "{{registry_username}}" "{{registry_userpasswd}}"

- name: Upload Nginx configuration
  notify: Restart Nginx
  ansible.builtin.copy:
    src: nginx/nginx.conf
    dest: /etc/nginx/

- name: Install docker and its dependecies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: Install Python3 and its dependencies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - python3
    - python3-pip

- name: Pip install Docker SDK for python
  ansible.builtin.pip:
    name:
    - docker

- name: Docker Registry Volume
  ansible.builtin.file:
    path: /var/lib/registry
    state: directory

- name: Run Docker registry
  community.docker.docker_container:
    name: container-image-registry
    state: started
    restart: true
    restart_policy: "always"
    image: registry:2
    volumes:
      - /var/lib/registry:/var/lib/registry
    ports:
      - "127.0.0.1:5000:5000"

