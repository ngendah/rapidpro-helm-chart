---
- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - gnupg-agent
    - software-properties-common

- name: Install postgresql and its dependecies
  ansible.builtin.apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - acl
    - "postgresql-{{ pg_version }}"
    - "postgresql-contrib-{{ pg_version }}"
    - "postgresql-{{ pg_version }}-postgis-3"
    - python3-psycopg2

- name: Update postgres auth method
  ansible.builtin.lineinfile:
    path: /etc/postgresql/{{ pg_version }}/main/pg_hba.conf
    regexp: "all\\s+postgres.*$"
    line: "local   all             postgres                                trust"

- name: Start postgresql
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: yes

- name: Create the database user
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ pg_user }}"
    password: "{{ pg_password }}"
    role_attr_flags: CREATEDB,NOSUPERUSER

- name: Create database
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    db: "{{ pg_user }}"
    owner: "{{ pg_user }}"

- name: Install postgis extension
  become: true
  become_user: postgres
  community.postgresql.postgresql_ext:
    name: postgis
    db: "{{ pg_user }}"
    state: present

- name: Update postgresql configuration
  block:
    - name: Update listen addresses
      ansible.builtin.lineinfile:
        path: /etc/postgresql/{{ pg_version }}/main/postgresql.conf
        regexp: "^#?\\s*listen_addresses.*$"
        line: "listen_addresses = 'localhost, {{ ansible_ssh_host }}'"

    - name: Update user auth method
      ansible.builtin.lineinfile:
        path: /etc/postgresql/{{ pg_version }}/main/pg_hba.conf
        insertafter: "IPv4\\s+local"
        regexp: "\\s+{{pg_user}}.*$"
        line: "host    {{pg_user}}             {{pg_user}}             samenet               scram-sha-256"

- name: Restart postgresql
  ansible.builtin.service:
    name: postgresql
    state: restarted

