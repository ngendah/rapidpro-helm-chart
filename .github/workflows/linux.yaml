name: CI tests

on:
  pull_request:
  push:
    branches:
    - f/gh-actions

jobs:
  builds:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install essentials
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential jq
        curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    - name: Install Docker
      run: |
        for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
        sudo apt-get update
        sudo apt-get install ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg
        echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Run servers
      run: |
        ./infrastructure/local/k3d_compose/run.sh install;
        sudo docker compose -f ./infrastructure/local/k3d_compose/docker-compose.yaml

    - name: Build images
      working-directory: ./images
      run: |
        echo $(cat ../infrastructure/local/k3d_compose/registry.conf.d/passwd) | sudo docker login $(cat ../infrastructure/local/k3d_compose/registry.conf.d/hostip) --username $(cat ../infrastructure/local/k3d_compose/registry.conf.d/username) --password-stdin;
        tee registry.json<<EOF
        {
          "domain": "$(cat ../infrastructure/local/k3d_compose/registry.conf.d/hostip)"
        }
        EOF
        sudo make -j$(nproc --all) 

    - name: Test image build and push
      run: |
        auth=$(echo -n "$(cat ./infrastructure/local/k3d_compose/registry.conf.d/username):$(cat ./infrastructure/local/k3d_compose/registry.conf.d/passwd)" | base64);
        result=$(curl -sSk -H "Authorization: Basic $auth" https://$(cat ./infrastructure/local/k3d_compose/registry.conf.d/hostip)/v2/_catalog | jq '.repositories[]' | wc -l);
        [ "$result" -eq "3" ]

    - name: Test Rapidpro Helm installation
      run: |
        helm install --kubeconfig=./infrastructure/local/k3d_compose/kubeconfig rapidpro ./rapidpro
        kubectl --kubeconfig=./infrastructure/local/k3d_compose/kubeconfig get po

    - name: Clean up
      run: |
        ./infrastructure/local/k3d_compose/run.sh stop

