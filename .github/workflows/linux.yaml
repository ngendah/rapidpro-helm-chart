name: CI tests

on:
  pull_request:
  push:
    branches:
      - master
      - f/*
      - r/*
      - b/*

jobs:
  builds:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install essentials
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential jq
        curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    - name: Install Docker
      run: |
        for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
        sudo apt-get update
        sudo apt-get install ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg
        echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Run servers
      working-directory: ./infrastructure/local/k3d_compose
      run: |
        ./run.sh install;

    - name: Build images
      working-directory: ./images
      run: |
        registry_conf_d=../infrastructure/local/k3d_compose/registry.conf.d
        echo $(cat $registry_conf_d/passwd) | sudo docker login $(cat $registry_conf_d/hostip) --username $(cat $registry_conf_d/username) --password-stdin;
        sudo make -e BUILD_OPTIONS=--quiet -e REGISTRY_HOST="$(cat $registry_conf_d/hostip)" -j $(nproc --all)

    - name: Test, image build and push
      working-directory: ./infrastructure/local/k3d_compose
      run: |
        registry_conf_d=./registry.conf.d
        auth=$(echo -n "$(cat $registry_conf_d/username):$(cat $registry_conf_d/passwd)" | base64);
        result=$(curl -sSk -H "Authorization: Basic $auth" https://$(cat $registry_conf_d/hostip)/v2/_catalog | jq '.repositories[]' | wc -l);
        [ "$result" -eq "3" ]

    - name: Test Rapidpro Helm installation
      run: |
        registry_conf_d=./infrastructure/local/k3d_compose/registry.conf.d
        postgres_conf_d=./infrastructure/local/k3d_compose/postgresql.conf.d
        kubeconfig=./infrastructure/local/k3d_compose/kubeconfig
        helm install --kubeconfig=$kubeconfig rapidpro ./rapidpro \
          --set global.registry.host=$(cat $registry_conf_d/hostip) \
          --set global.databaseHost.postgres.host="$(cat $postgres_conf_d/hostip)"
        count=$(kubectl --kubeconfig=$kubeconfig get po --no-headers -oname | wc -l);
        [ "$count" -gt 1 ]

    - name: Clean up
      working-directory: ./infrastructure/local/k3d_compose
      run: |
        ./run.sh stop

